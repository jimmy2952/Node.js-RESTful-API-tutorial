{
  "openapi": "3.0.0",
  "info": {
    "title": "User API",
    "description": "Simple RESTful API in Node.js with TypeScript",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api",
      "description": "Local server"
    }
  ],
  "paths": {
    "/users": {
      "get": {
        "summary": "Return all users with list.",
        "description": "Return all existed users.",
        "responses": {
          "200": {
            "description": "A JSON array of user names",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new user.",
        "description": "Create a new user.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success create user.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Return the specific user.",
        "description": "Return the specific user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id which wants to get",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A JSON object of user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update the specific user.",
        "description": "Update the specific user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id which wants to update",
            "required": true,
            "type": "string"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserInput"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success update user.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete the specific user.",
        "description": "Delete the specific user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "user id which wants to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success delete user.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "username": {
            "type": "string",
            "example": "Jimmy"
          },
          "email": {
            "type": "string",
            "example": "test@test.com"
          }
        },
        "required": ["id", "username", "email"]
      },
      "UserInput": {
        "properties": {
          "username": {
            "type": "string",
            "example": "Jimmy"
          },
          "email": {
            "type": "string",
            "example": "test@test.com"
          }
        },
        "required": ["username", "email"]
      }
    }
  }
}